{"version":3,"sources":["views/CustomerManagementList/components/Header/Header.js","views/CustomerManagementList/components/Results/Results.js","views/CustomerManagementList/CustomerManagementList.js","views/CustomerManagementList/index.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js"],"names":["useStyles","makeStyles","root","Header","props","className","rest","Object","objectWithoutProperties","classes","react_default","a","createElement","assign","clsx","Grid","alignItems","container","justify","spacing","item","Typography","component","gutterBottom","variant","Button","color","theme","content","padding","inner","minWidth","nameCell","display","avatar","height","width","marginRight","actions","justifyContent","Results","customers","_useState","useState","_useState2","slicedToArray","selectedCustomers","setSelectedCustomers","_useState3","_useState4","page","setPage","_useState5","_useState6","rowsPerPage","setRowsPerPage","length","Math","ceil","Card","CardHeader","action","components","title","Divider","CardContent","lib_default","Table","TableHead","TableRow","TableCell","Checkbox","checked","indeterminate","onChange","event","target","map","customer","id","align","TableBody","slice","hover","key","selected","indexOf","selectedIndex","newSelectedCustomers","concat","handleSelectOne","value","Avatar","src","getInitials","name","Link","RouterLink","to","email","location","currency","spent","type","projects","rating","size","CardActions","TablePagination","count","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","defaultProps","results","marginTop","CustomerManagementList","setCustomers","useEffect","mounted","axios","get","then","response","data","components_Header_Header","onFilter","onSearch","components_Results_Results","__webpack_require__","d","__webpack_exports__","views_CustomerManagementList_CustomerManagementList","CheckBoxOutlineBlank","createSvgIcon","CheckBox","IndeterminateCheckBox","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox_Checkbox","forwardRef","ref","_props$checkedIcon","checkedIcon","_props$color","_props$icon","icon","_props$indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","other","SwitchBase","esm_extends","clsx_m","helpers","disabled","data-indeterminate","withStyles","palette","text","secondary","colorPrimary","&$checked","primary","main","&:hover","backgroundColor","colorManipulator","hoverOpacity","@media (hover: none)","&$disabled","colorSecondary","_ref","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePagination_TablePaginationActions","backIconButtonProps","nextIconButtonProps","useTheme","IconButton","onClick","direction","defaultLabelDisplayedRows","from","defaultRowsPerPageOptions","TablePagination_TablePagination","colSpan","_props$ActionsCompone","ActionsComponent","colSpanProp","_props$component","Component","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$rowsPerPageOpt","_props$SelectProps","SelectProps","MenuItemComponent","native","MenuItem","Toolbar","toolbar","spacer","caption","Select","select","selectIcon","input","InputBase","selectRoot","rowsPerPageOption","menuItem","min","fontSize","typography","pxToRem","&:last-child","minHeight","paddingRight","flex","flexShrink","marginLeft","paddingLeft","textAlign","textAlignLast","top"],"mappings":"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","file":"static/js/21.a741e345.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Customers\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n          Add Flighing\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  Button,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\n\nimport getInitials from 'utils/getInitials';\nimport { ReviewStars, GenericMoreButton, TableEditBar } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  },\n  nameCell: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, customers, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = event => {\n    const selectedCustomers = event.target.checked\n      ? customers.map(customer => customer.id)\n      : [];\n\n    setSelectedCustomers(selectedCustomers);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomers.indexOf(id);\n    let newSelectedCustomers = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomers = newSelectedCustomers.concat(selectedCustomers, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(1)\n      );\n    } else if (selectedIndex === selectedCustomers.length - 1) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(0, -1)\n      );\n    } else if (selectedIndex > 0) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(0, selectedIndex),\n        selectedCustomers.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedCustomers(newSelectedCustomers);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {customers.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(customers.length / rowsPerPage)}\n      </Typography>\n      <Card>\n        <CardHeader\n          action={<GenericMoreButton />}\n          title=\"All customers\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={selectedCustomers.length === customers.length}\n                        color=\"primary\"\n                        indeterminate={\n                          selectedCustomers.length > 0 &&\n                          selectedCustomers.length < customers.length\n                        }\n                        onChange={handleSelectAll}\n                      />\n                    </TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Location</TableCell>\n                    <TableCell>Money spent</TableCell>\n                    <TableCell>Type</TableCell>\n                    <TableCell>Projects held</TableCell>\n                    <TableCell>Reviews</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {customers.slice(0, rowsPerPage).map(customer => (\n                    <TableRow\n                      hover\n                      key={customer.id}\n                      selected={selectedCustomers.indexOf(customer.id) !== -1}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={\n                            selectedCustomers.indexOf(customer.id) !== -1\n                          }\n                          color=\"primary\"\n                          onChange={event =>\n                            handleSelectOne(event, customer.id)\n                          }\n                          value={selectedCustomers.indexOf(customer.id) !== -1}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <div className={classes.nameCell}>\n                          <Avatar\n                            className={classes.avatar}\n                            src={customer.avatar}\n                          >\n                            {getInitials(customer.name)}\n                          </Avatar>\n                          <div>\n                            <Link\n                              color=\"inherit\"\n                              component={RouterLink}\n                              to=\"/management/customers/1\"\n                              variant=\"h6\"\n                            >\n                              {customer.name}\n                            </Link>\n                            <div>{customer.email}</div>\n                          </div>\n                        </div>\n                      </TableCell>\n                      <TableCell>{customer.location}</TableCell>\n                      <TableCell>\n                        {customer.currency}\n                        {customer.spent}\n                      </TableCell>\n                      <TableCell>{customer.type}</TableCell>\n                      <TableCell>{customer.projects}</TableCell>\n                      <TableCell>\n                        <ReviewStars value={customer.rating} />\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to=\"/management/customers/1\"\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={customers.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      <TableEditBar selected={selectedCustomers} />\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  customers: []\n};\n\nexport default Results;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport axios from 'utils/axios';\nimport { Page, SearchBar } from 'components';\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst CustomerManagementList = () => {\n  const classes = useStyles();\n\n  const [customers, setCustomers] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchCustomers = () => {\n      axios.get('/api/management/customers').then(response => {\n        if (mounted) {\n          setCustomers(response.data.customers);\n        }\n      });\n    };\n\n    fetchCustomers();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const handleFilter = () => {};\n  const handleSearch = () => {};\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Customer Management List\"\n    >\n      <Header />\n      <SearchBar\n        onFilter={handleFilter}\n        onSearch={handleSearch}\n      />\n      {customers && (\n        <Results\n          className={classes.results}\n          customers={customers}\n        />\n      )}\n    </Page>\n  );\n};\n\nexport default CustomerManagementList;\n","export { default } from './CustomerManagementList';\n","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport { capitalize } from '../utils/helpers';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This prop can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} page The page selected\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(12),\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      height: 56,\n      minHeight: 56,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      // `.selectRoot` should be merged with `.input` in v5.\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {\n      top: 1\n    },\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count);\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      classes = props.classes,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"classes\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return React.createElement(Component, _extends({\n    className: classes.root,\n    colSpan: colSpan,\n    ref: ref\n  }, other), React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption,\n      value: rowsPerPageOption\n    }, rowsPerPageOption);\n  })), React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: Math.min(count, (page + 1) * rowsPerPage),\n    count: count,\n    page: page\n  })), React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: backIconButtonProps,\n    count: count,\n    nextIconButtonProps: nextIconButtonProps,\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a DOM element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label.\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label. Invoked with a `{ from, to, count, page }`\n   * object.\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} page The page selected\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: the page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);"],"sourceRoot":""}