{"version":3,"sources":["views/OrderManagementList/components/Header/Header.js","views/OrderManagementList/components/Results/Results.js","views/OrderManagementList/OrderManagementList.js","views/OrderManagementList/index.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js"],"names":["useStyles","makeStyles","root","Header","props","className","rest","Object","objectWithoutProperties","classes","react_default","a","createElement","assign","clsx","Grid","alignItems","container","justify","spacing","item","Typography","component","gutterBottom","variant","Button","color","theme","filterButton","marginRight","content","padding","inner","minWidth","actions","justifyContent","Results","orders","_useState","useState","_useState2","slicedToArray","selectedOrders","setSelectedOrders","_useState3","_useState4","page","setPage","_useState5","_useState6","rowsPerPage","setRowsPerPage","paymentStatusColors","canceled","colors","grey","pending","orange","completed","green","rejected","red","length","Math","ceil","Card","CardHeader","action","components","title","Divider","CardContent","lib_default","Table","TableHead","TableRow","TableCell","Checkbox","checked","indeterminate","onChange","event","target","map","order","id","align","TableBody","slice","key","selected","indexOf","selectedIndex","newSelectedOrders","concat","handleSelectOne","value","payment","ref","moment","created_at","format","customer","name","method","currency","total","status","RouterLink","size","to","CardActions","TablePagination","count","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","defaultProps","results","marginTop","OrderManagementList","setOrders","useEffect","mounted","axios","get","then","response","data","components_Header_Header","components_Results_Results","__webpack_require__","d","__webpack_exports__","views_OrderManagementList_OrderManagementList","CheckBoxOutlineBlank","createSvgIcon","CheckBox","IndeterminateCheckBox","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox_Checkbox","forwardRef","_props$checkedIcon","checkedIcon","_props$color","_props$icon","icon","_props$indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","other","SwitchBase","esm_extends","type","clsx_m","helpers","disabled","data-indeterminate","withStyles","palette","text","secondary","colorPrimary","&$checked","primary","main","&:hover","backgroundColor","colorManipulator","hoverOpacity","@media (hover: none)","&$disabled","colorSecondary","_ref","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePagination_TablePaginationActions","backIconButtonProps","nextIconButtonProps","useTheme","IconButton","onClick","direction","defaultLabelDisplayedRows","from","defaultRowsPerPageOptions","TablePagination_TablePagination","colSpan","_props$ActionsCompone","ActionsComponent","colSpanProp","_props$component","Component","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$rowsPerPageOpt","_props$SelectProps","SelectProps","MenuItemComponent","native","MenuItem","Toolbar","toolbar","spacer","caption","Select","select","selectIcon","input","InputBase","selectRoot","rowsPerPageOption","menuItem","min","fontSize","typography","pxToRem","&:last-child","height","minHeight","paddingRight","flex","flexShrink","marginLeft","paddingLeft","textAlign","textAlignLast","top"],"mappings":"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","file":"static/js/23.0ffffd12.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Orders\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Add order\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, GenericMoreButton, TableEditBar } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography>\n      <Card>\n        <CardHeader\n          action={<GenericMoreButton />}\n          title=\"Orders\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={selectedOrders.length === orders.length}\n                        color=\"primary\"\n                        indeterminate={\n                          selectedOrders.length > 0 &&\n                          selectedOrders.length < orders.length\n                        }\n                        onChange={handleSelectAll}\n                      />\n                    </TableCell>\n                    <TableCell>Ref</TableCell>\n                    <TableCell>Customer</TableCell>\n                    <TableCell>Method</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(0, rowsPerPage).map(order => (\n                    <TableRow\n                      key={order.id}\n                      selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={selectedOrders.indexOf(order.id) !== -1}\n                          color=\"primary\"\n                          onChange={event => handleSelectOne(event, order.id)}\n                          value={selectedOrders.indexOf(order.id) !== -1}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        {order.payment.ref}\n                        <Typography variant=\"body2\">\n                          {moment(order.created_at).format(\n                            'DD MMM YYYY | hh:mm'\n                          )}\n                        </Typography>\n                      </TableCell>\n\n                      <TableCell>{order.customer.name}</TableCell>\n                      <TableCell>{order.payment.method}</TableCell>\n                      <TableCell>\n                        {order.payment.currency}\n                        {order.payment.total}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={paymentStatusColors[order.payment.status]}\n                          variant=\"outlined\"\n                        >\n                          {order.payment.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/orders/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      <TableEditBar selected={selectedOrders} />\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport axios from 'utils/axios';\nimport { Page, SearchBar } from 'components';\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst OrderManagementList = () => {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchOrders = () => {\n      axios.get('/api/orders').then(response => {\n        if (mounted) {\n          setOrders(response.data.orders);\n        }\n      });\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Orders Management List\"\n    >\n      <Header />\n      <SearchBar />\n      <Results\n        className={classes.results}\n        orders={orders} //\n      />\n    </Page>\n  );\n};\n\nexport default OrderManagementList;\n","export { default } from './OrderManagementList';\n","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport { capitalize } from '../utils/helpers';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This prop can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} page The page selected\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(12),\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      height: 56,\n      minHeight: 56,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      // `.selectRoot` should be merged with `.input` in v5.\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {\n      top: 1\n    },\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count);\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      classes = props.classes,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"classes\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return React.createElement(Component, _extends({\n    className: classes.root,\n    colSpan: colSpan,\n    ref: ref\n  }, other), React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption,\n      value: rowsPerPageOption\n    }, rowsPerPageOption);\n  })), React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: Math.min(count, (page + 1) * rowsPerPage),\n    count: count,\n    page: page\n  })), React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: backIconButtonProps,\n    count: count,\n    nextIconButtonProps: nextIconButtonProps,\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a DOM element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label.\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label. Invoked with a `{ from, to, count, page }`\n   * object.\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} page The page selected\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: the page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);"],"sourceRoot":""}