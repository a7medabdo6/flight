{"version":3,"sources":["views/ProjectCreate/components/AboutAuthor/AboutAuthor.js","views/ProjectCreate/components/AboutProject/AboutProject.js","views/ProjectCreate/components/Header/Header.js","views/ProjectCreate/components/Preferences/Preferences.js","views/ProjectCreate/components/ProjectCover/ProjectCover.js","views/ProjectCreate/components/ProjectDetails/ProjectDetails.js","views/ProjectCreate/ProjectCreate.js","views/ProjectCreate/index.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js"],"names":["useStyles","makeStyles","theme","root","option","border","concat","palette","divider","display","alignItems","padding","spacing","maxWidth","& + &","marginTop","selectedOption","backgroundColor","colors","grey","optionRadio","margin","optionDetails","marginLeft","AboutAuthor","props","className","rest","Object","objectWithoutProperties","classes","_useState","useState","_useState2","slicedToArray","selected","setSelected","react_default","a","createElement","Card","assign","clsx","CardHeader","title","CardContent","value","description","map","defineProperty","key","Radio","checked","color","onClick","event","handleChange","Typography","gutterBottom","variant","alert","marginBottom","formGroup","fieldGroup","fieldHint","tags","& > * + *","flexGrow","dateField","AboutProject","initialValues","name","tag","startDate","moment","endDate","add","objectSpread","values","setValues","_useState3","_useState4","calendarTrigger","setCalendarTrigger","handleFieldChange","field","persist","handleCalendarOpen","trigger","calendarOpen","Boolean","calendarMinDate","calendarValue","components","message","TextField","fullWidth","label","onChange","target","Button","addButton","newValues","includes","toConsumableArray","push","size","Add_default","addIcon","Chip","deleteIcon","Close_default","onDelete","filter","t","handleTagDelete","format","material_ui_pickers_esm","minDate","onAccept","date","onClose","open","style","Header","component","options","flexDirection","Preferences","FormControlLabel","control","Checkbox","defaultChecked","ProjectCover","ProjectDetails","placeholder","width","breakpoints","lg","aboutAuthor","aboutProject","projectCover","projectDetails","preferences","actions","ProjectCreate","components_Header_Header","components_AboutAuthor_AboutAuthor","components_AboutProject_AboutProject","components_ProjectCover_ProjectCover","components_ProjectDetails_ProjectDetails","components_Preferences_Preferences","__webpack_require__","d","__webpack_exports__","views_ProjectCreate_ProjectCreate","CheckBoxOutlineBlank","createSvgIcon","CheckBox","IndeterminateCheckBox","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox_Checkbox","forwardRef","ref","_props$checkedIcon","checkedIcon","_props$color","_props$icon","icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","other","SwitchBase","esm_extends","type","clsx_m","helpers","disabled","data-indeterminate","withStyles","text","secondary","colorPrimary","&$checked","primary","main","&:hover","colorManipulator","action","hoverOpacity","@media (hover: none)","&$disabled","colorSecondary"],"mappings":"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","file":"static/js/25.44760919.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  Radio,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-start',\n    padding: theme.spacing(2),\n    maxWidth: 560,\n    '& + &': {\n      marginTop: theme.spacing(2)\n    }\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[50]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  optionDetails: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst AboutAuthor = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState('freelancer');\n\n  const handleChange = (event, option) => {\n    setSelected(option.value);\n  };\n\n  const options = [\n    {\n      value: 'freelancer',\n      title: 'I\\'m a freelancer',\n      description: 'I\\'m looking for teamates to join in a personal project'\n    },\n    {\n      value: 'projectOwner',\n      title: 'I’m a project owner',\n      description:\n        'I\\'m looking for freelancer or contractors to take care of my project'\n    },\n    {\n      value: 'affiliate',\n      title: 'I want to join affiliate',\n      description:\n        'I\\'m looking for freelancer or contractors to take care of my project'\n    }\n  ];\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Who are you exactly?\" />\n      <CardContent>\n        {options.map(option => (\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option.value\n            })}\n            key={option.value}\n          >\n            <Radio\n              checked={selected === option.value}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleChange(event, option)}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option.title}\n              </Typography>\n              <Typography variant=\"body1\">{option.description}</Typography>\n            </div>\n          </div>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutAuthor.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutAuthor;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Button,\n  Chip,\n  Typography\n} from '@material-ui/core';\nimport { DatePicker } from '@material-ui/pickers';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { Alert } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  alert: {\n    marginBottom: theme.spacing(3)\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0)\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  dateField: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\nconst AboutProject = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const initialValues = {\n    name: '',\n    tag: '',\n    tags: ['Full-Time', 'ReactJS'],\n    startDate: moment(),\n    endDate: moment().add(1, 'day')\n  };\n\n  const [values, setValues] = useState({ ...initialValues });\n  const [calendarTrigger, setCalendarTrigger] = useState(null);\n\n  const handleFieldChange = (event, field, value) => {\n    event.persist && event.persist();\n    setValues(values => ({\n      ...values,\n      [field]: value\n    }));\n  };\n\n  const handleTagAdd = () => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\n        newValues.tags = [...newValues.tags];\n        newValues.tags.push(newValues.tag);\n      }\n\n      newValues.tag = '';\n\n      return newValues;\n    });\n  };\n\n  const handleTagDelete = tag => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      newValues.tags = newValues.tags.filter(t => t !== tag);\n\n      return newValues;\n    });\n  };\n\n  const handleCalendarOpen = trigger => {\n    setCalendarTrigger(trigger);\n  };\n\n  const handleCalendarChange = () => {};\n\n  const handleCalendarAccept = date => {\n    setValues(values => ({\n      ...values,\n      [calendarTrigger]: date\n    }));\n  };\n\n  const handleCalendarClose = () => {\n    setCalendarTrigger(false);\n  };\n\n  const calendarOpen = Boolean(calendarTrigger);\n  const calendarMinDate =\n    calendarTrigger === 'startDate'\n      ? moment()\n      : moment(values.startDate).add(1, 'day');\n  const calendarValue = values[calendarTrigger];\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"About this project\" />\n      <CardContent>\n        <form>\n          <Alert\n            className={classes.alert}\n            message=\"Once you choose the project name you can’t change it unless you contact customer support.\"\n          />\n          <div className={classes.formGroup}>\n            <TextField\n              fullWidth\n              label=\"Project Name\"\n              name=\"name\"\n              onChange={event =>\n                handleFieldChange(event, 'name', event.target.value)\n              }\n              value={values.name}\n              variant=\"outlined\"\n            />\n          </div>\n          <div className={classes.formGroup}>\n            <div className={classes.fieldGroup}>\n              <TextField\n                className={classes.flexGrow}\n                label=\"Project Tags\"\n                name=\"tag\"\n                onChange={event =>\n                  handleFieldChange(event, 'tag', event.target.value)\n                }\n                value={values.tag}\n                variant=\"outlined\"\n              />\n              <Button\n                className={classes.addButton}\n                onClick={handleTagAdd}\n                size=\"small\"\n              >\n                <AddIcon className={classes.addIcon} />\n                Add\n              </Button>\n            </div>\n            <Typography\n              className={classes.fieldHint}\n              variant=\"body2\"\n            >\n              Tags will be colored depending the technology if the system\n              recognises.\n            </Typography>\n            <div className={classes.tags}>\n              {values.tags.map(tag => (\n                <Chip\n                  deleteIcon={<CloseIcon />}\n                  key={tag}\n                  label={tag}\n                  onDelete={() => handleTagDelete(tag)}\n                />\n              ))}\n            </div>\n          </div>\n          <div className={classes.formGroup}>\n            <div className={classes.fieldGroup}>\n              <TextField\n                className={classes.dateField}\n                label=\"Start Date\"\n                name=\"startDate\"\n                onClick={() => handleCalendarOpen('startDate')}\n                value={moment(values.startDate).format('DD/MM/YYYY')}\n                variant=\"outlined\"\n              />\n              <TextField\n                className={classes.dateField}\n                label=\"End Date\"\n                name=\"endDate\"\n                onClick={() => handleCalendarOpen('endDate')}\n                value={moment(values.endDate).format('DD/MM/YYYY')}\n                variant=\"outlined\"\n              />\n            </div>\n          </div>\n        </form>\n      </CardContent>\n      <DatePicker\n        minDate={calendarMinDate}\n        onAccept={handleCalendarAccept}\n        onChange={handleCalendarChange}\n        onClose={handleCalendarClose}\n        open={calendarOpen}\n        style={{ display: 'none' }} // Temporal fix to hide the input element\n        value={calendarValue}\n        variant=\"dialog\"\n      />\n    </Card>\n  );\n};\n\nAboutProject.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutProject;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        New Project\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        Apply for listing project\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  options: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst Preferences = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Preferences\" />\n      <CardContent>\n        <Typography\n          gutterBottom\n          variant=\"h6\"\n        >\n          Privacy\n        </Typography>\n        <Typography variant=\"body2\">\n          You will recieve emails in your business email address\n        </Typography>\n        <div className={classes.options}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                color=\"primary\"\n                defaultChecked //\n              />\n            }\n            label=\"Allow teamates invite others\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                color=\"primary\"\n                defaultChecked //\n              />\n            }\n            label=\"Private Project\"\n          />\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nPreferences.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Preferences;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\n\nimport { FilesDropzone } from 'components';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProjectCover = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Project cover\" />\n      <CardContent>\n        <FilesDropzone />\n      </CardContent>\n    </Card>\n  );\n};\n\nProjectCover.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProjectCover;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\n\nimport { RichEditor } from 'components';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProjectDetails = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Project details\" />\n      <CardContent>\n        <RichEditor placeholder=\"Say something about the product...\" />\n      </CardContent>\n    </Card>\n  );\n};\n\nProjectDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProjectDetails;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\n\nimport { Page } from 'components';\nimport {\n  Header,\n  AboutAuthor,\n  AboutProject,\n  Preferences,\n  ProjectCover,\n  ProjectDetails\n} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3, 3, 6, 3)\n  },\n  aboutAuthor: {\n    marginTop: theme.spacing(3)\n  },\n  aboutProject: {\n    marginTop: theme.spacing(3)\n  },\n  projectCover: {\n    marginTop: theme.spacing(3)\n  },\n  projectDetails: {\n    marginTop: theme.spacing(3)\n  },\n  preferences: {\n    marginTop: theme.spacing(3)\n  },\n  actions: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst ProjectCreate = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Project Create\"\n    >\n      <Header />\n      <AboutAuthor className={classes.aboutAuthor} />\n      <AboutProject className={classes.aboutProject} />\n      <ProjectCover className={classes.projectCover} />\n      <ProjectDetails className={classes.projectDetails} />\n      <Preferences className={classes.preferences} />\n      <div className={classes.actions}>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Create project\n        </Button>\n      </div>\n    </Page>\n  );\n};\n\nexport default ProjectCreate;\n","export { default } from './ProjectCreate';\n","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport { capitalize } from '../utils/helpers';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This prop can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);"],"sourceRoot":""}