{"version":3,"sources":["../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","views/CustomerManagementList/components/Header/Header.js","views/CustomerManagementList/components/Results/Results.js","views/CustomerManagementList/CustomerManagementList.js","views/CustomerManagementList/index.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js"],"names":["_ref","react_default","a","createElement","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePagination_TablePaginationActions","forwardRef","props","ref","backIconButtonProps","count","nextIconButtonProps","onChangePage","page","rowsPerPage","other","Object","objectWithoutProperties","theme","useTheme","esm_extends","IconButton","onClick","event","disabled","color","direction","Math","ceil","defaultLabelDisplayedRows","from","to","concat","defaultRowsPerPageOptions","TablePagination_TablePagination","colSpan","_props$ActionsCompone","ActionsComponent","classes","colSpanProp","_props$component","component","Component","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","onChangeRowsPerPage","_props$rowsPerPageOpt","rowsPerPageOptions","_props$SelectProps","SelectProps","MenuItemComponent","native","MenuItem","className","root","Toolbar","toolbar","spacer","length","Typography","variant","caption","Select","select","icon","selectIcon","input","InputBase","clsx_m","selectRoot","value","onChange","map","rowsPerPageOption","menuItem","key","min","actions","__webpack_exports__","withStyles","palette","text","secondary","fontSize","typography","pxToRem","&:last-child","padding","height","minHeight","paddingRight","flex","flexShrink","marginRight","marginLeft","paddingLeft","textAlign","textAlignLast","top","name","useStyles","makeStyles","Header","rest","assign","clsx","Grid","alignItems","container","justify","spacing","item","gutterBottom","Button","content","inner","minWidth","nameCell","display","avatar","width","justifyContent","Results","customers","_useState","useState","_useState2","slicedToArray","selectedCustomers","setSelectedCustomers","_useState3","_useState4","setPage","_useState5","_useState6","setRowsPerPage","Card","CardHeader","action","components","title","Divider","CardContent","lib_default","Table","TableHead","TableRow","Checkbox","checked","indeterminate","target","customer","id","align","TableBody","slice","hover","selected","indexOf","selectedIndex","newSelectedCustomers","handleSelectOne","Avatar","src","getInitials","Link","RouterLink","email","location","currency","spent","type","projects","rating","size","CardActions","TablePagination","defaultProps","results","marginTop","CustomerManagementList","setCustomers","useEffect","mounted","axios","get","then","response","data","components_Header_Header","onFilter","onSearch","components_Results_Results","__webpack_require__","d","views_CustomerManagementList_CustomerManagementList","CheckBoxOutlineBlank","createSvgIcon","CheckBox","IndeterminateCheckBox","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox_Checkbox","_props$checkedIcon","checkedIcon","_props$color","_props$icon","_props$indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","SwitchBase","helpers","data-indeterminate","colorPrimary","&$checked","primary","main","&:hover","backgroundColor","colorManipulator","hoverOpacity","@media (hover: none)","&$disabled","colorSecondary"],"mappings":"oOAYAA,EAAWC,EAAAC,EAAKC,cAAeC,EAAA,EAAkB,MAEjDC,EAAYJ,EAAAC,EAAKC,cAAeG,EAAA,EAAiB,MAEjDC,EAAYN,EAAAC,EAAKC,cAAeG,EAAA,EAAiB,MAEjDE,EAAYP,EAAAC,EAAKC,cAAeC,EAAA,EAAkB,MAmEnCK,EAjEcR,EAAAC,EAAKQ,WAAA,SAAAC,EAAAC,GAClC,IAAAC,EAAAF,EAAAE,oBACAC,EAAAH,EAAAG,MACAC,EAAAJ,EAAAI,oBACAC,EAAAL,EAAAK,aACAC,EAAAN,EAAAM,KACAC,EAAAP,EAAAO,YACAC,EAAcC,OAAAC,EAAA,EAAAD,CAAwBT,EAAA,2FAEtCW,EAAcF,OAAAG,EAAA,EAAAH,GAUd,OAASnB,EAAAC,EAAKC,cAAA,MAAsBiB,OAAAI,EAAA,EAAAJ,CAAQ,CAC5CR,OACGO,GAAUlB,EAAAC,EAAKC,cAAesB,EAAA,EAAYL,OAAAI,EAAA,EAAAJ,CAAQ,CACrDM,QAXA,SAAAC,GACAX,EAAAW,EAAAV,EAAA,IAWAW,SAAA,IAAAX,EACAY,MAAA,WACGhB,GAAA,QAAAS,EAAAQ,UAAA9B,EAAAK,GAAmEJ,EAAAC,EAAKC,cAAesB,EAAA,EAAYL,OAAAI,EAAA,EAAAJ,CAAQ,CAC9GM,QAXA,SAAAC,GACAX,EAAAW,EAAAV,EAAA,IAWAW,SAAAX,GAAAc,KAAAC,KAAAlB,EAAAI,GAAA,EACAW,MAAA,WACGd,GAAA,QAAAO,EAAAQ,UAAAvB,EAAAC,MCiCHyB,EAAA,SAAAjC,GACA,IAAAkC,EAAAlC,EAAAkC,KACAC,EAAAnC,EAAAmC,GACArB,EAAAd,EAAAc,MACA,SAAAsB,OAAAF,EAAA,KAAAE,OAAAD,EAAA,QAAAC,OAAAtB,IAGAuB,EAAA,eAKIC,EAAkBrC,EAAAC,EAAKQ,WAAA,SAAAC,EAAAC,GAC3B,IAuBA2B,EAvBAC,EAAA7B,EAAA8B,iBACAA,OAAA,IAAAD,EAA4D/B,EAAsB+B,EAClF3B,EAAAF,EAAAE,oBACA6B,EAAA/B,EAAA+B,QACAC,EAAAhC,EAAA4B,QACAK,EAAAjC,EAAAkC,UACAC,OAAA,IAAAF,EAAgDG,EAAA,EAASH,EACzD9B,EAAAH,EAAAG,MACAkC,EAAArC,EAAAsC,mBACAA,OAAA,IAAAD,EAAAf,EAAAe,EACAE,EAAAvC,EAAAwC,iBACAA,OAAA,IAAAD,EAAA,iBAAAA,EACAnC,EAAAJ,EAAAI,oBACAC,EAAAL,EAAAK,aACAoC,EAAAzC,EAAAyC,oBACAnC,EAAAN,EAAAM,KACAC,EAAAP,EAAAO,YACAmC,EAAA1C,EAAA2C,mBACAA,OAAA,IAAAD,EAAAhB,EAAAgB,EACAE,EAAA5C,EAAA6C,YACAA,OAAA,IAAAD,EAAA,GAAsDA,EACtDpC,EAAcC,OAAAC,EAAA,EAAAD,CAAwBT,EAAA,+OAItCmC,IAAoBC,EAAA,GAAS,OAAAD,IAC7BP,EAAAI,GAAA,KAGA,IAAAc,EAAAD,EAAAE,OAAA,SAA0DC,EAAA,EAC1D,OAAS1D,EAAAC,EAAKC,cAAA2C,EAA0B1B,OAAAI,EAAA,EAAAJ,CAAQ,CAChDwC,UAAAlB,EAAAmB,KACAtB,UACA3B,OACGO,GAAUlB,EAAAC,EAAKC,cAAe2D,EAAA,EAAO,CACxCF,UAAAlB,EAAAqB,SACK9D,EAAAC,EAAKC,cAAA,OACVyD,UAAAlB,EAAAsB,SACGV,EAAAW,OAAA,GAAoChE,EAAAC,EAAKC,cAAe+D,EAAA,EAAU,CACrErC,MAAA,UACAsC,QAAA,UACAP,UAAAlB,EAAA0B,SACGjB,GAAAG,EAAAW,OAAA,GAAsDhE,EAAAC,EAAKC,cAAekE,EAAA,EAAQjD,OAAAI,EAAA,EAAAJ,CAAQ,CAC7FsB,QAAA,CACA4B,OAAA5B,EAAA4B,OACAC,KAAA7B,EAAA8B,YAEAC,MAAWxE,EAAAC,EAAKC,cAAeuE,EAAA,EAAS,CACxCd,UAAiBxC,OAAAuD,EAAA,EAAAvD,CAAIsB,EAAA+B,MAAA/B,EAAAkC,cAErBC,MAAA3D,EACA4D,SAAA1B,GACGI,GAAAF,EAAAyB,IAAA,SAAAC,GACH,OAAW/E,EAAAC,EAAKC,cAAAsD,EAAA,CAChBG,UAAAlB,EAAAuC,SACAC,IAAAF,EACAH,MAAAG,GACKA,MACE/E,EAAAC,EAAKC,cAAe+D,EAAA,EAAU,CACrCrC,MAAA,UACAsC,QAAA,UACAP,UAAAlB,EAAA0B,SACGnB,EAAA,CACHf,KAAA,IAAApB,EAAA,EAAAG,EAAAC,EAAA,EACAiB,GAAAJ,KAAAoD,IAAArE,GAAAG,EAAA,GAAAC,GACAJ,QACAG,UACOhB,EAAAC,EAAKC,cAAAsC,EAAA,CACZmB,UAAAlB,EAAA0C,QACAvE,sBACAC,QACAC,sBACAC,eACAC,OACAC,oBAoGemE,EAAA,EAAAjE,OAAAkE,EAAA,EAAAlE,CA/PR,SAAAE,GACP,OAEAuC,KAAA,CACAhC,MAAAP,EAAAiE,QAAAC,KAAAC,UACAC,SAAApE,EAAAqE,WAAAC,QAAA,IAEAC,eAAA,CACAC,QAAA,IAKA/B,QAAA,CACAgC,OAAA,GACAC,UAAA,GACAC,aAAA,GAIAjC,OAAA,CACAkC,KAAA,YAIA9B,QAAA,CACA+B,WAAA,GAIAvB,WAAA,CAEAwB,YAAA,GACAC,WAAA,GAIA/B,OAAA,CACAgC,YAAA,EACAL,aAAA,GACAM,UAAA,QACAC,cAAA,SAKAhC,WAAA,CACAiC,IAAA,GAIAhC,MAAA,CACA5C,MAAA,UACA6D,SAAA,UACAS,WAAA,GAIAlB,SAAA,GAGAG,QAAA,CACAe,WAAA,EACAE,WAAA,MAgMyB,CACzBK,KAAA,sBADe,CAEZpE,0ICzQGqE,EAAYC,YAAW,iBAAO,CAClC/C,KAAM,MAmDOgD,EAhDA,SAAAlG,GAAS,IACdiD,EAAuBjD,EAAvBiD,UAAckD,EADA1F,OAAAC,EAAA,EAAAD,CACST,EADT,eAGhB+B,EAAUiE,IAEhB,OACE1G,EAAAC,EAAAC,cAAA,MAAAiB,OAAA2F,OAAA,GACMD,EADN,CAEElD,UAAWoD,YAAKtE,EAAQmB,KAAMD,KAE9B3D,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CACEC,WAAW,WACXC,WAAS,EACTC,QAAQ,gBACRC,QAAS,GAETpH,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAMK,MAAI,GACRrH,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CACErB,UAAU,KACV0E,cAAY,EACZpD,QAAQ,YACT,cAGDlE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CACErB,UAAU,KACVsB,QAAQ,MACT,cAIHlE,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAMK,MAAI,GACRrH,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CACE3F,MAAM,UACNsC,QAAQ,aACT,qLCjBLwC,EAAYC,YAAW,SAAAtF,GAAK,MAAK,CACrCuC,KAAM,GACN4D,QAAS,CACP3B,QAAS,GAEX4B,MAAO,CACLC,SAAU,KAEZC,SAAU,CACRC,QAAS,OACTX,WAAY,UAEdY,OAAQ,CACN/B,OAAQ,GACRgC,MAAO,GACP3B,YAAa9E,EAAM+F,QAAQ,IAE7BjC,QAAS,CACPU,QAASxE,EAAM+F,QAAQ,GACvBW,eAAgB,eAIdC,EAAU,SAAAtH,GAAS,IACfiD,EAAkCjD,EAAlCiD,UAAWsE,EAAuBvH,EAAvBuH,UAAcpB,EADV1F,OAAAC,EAAA,EAAAD,CACmBT,EADnB,2BAGjB+B,EAAUiE,IAHOwB,EAK2BC,mBAAS,IALpCC,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GAKhBI,EALgBF,EAAA,GAKGG,EALHH,EAAA,GAAAI,EAMCL,mBAAS,GANVM,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GAMhBxH,EANgByH,EAAA,GAMVC,EANUD,EAAA,GAAAE,EAOeR,mBAAS,IAPxBS,EAAAzH,OAAAkH,EAAA,EAAAlH,CAAAwH,EAAA,GAOhB1H,EAPgB2H,EAAA,GAOHC,EAPGD,EAAA,GAiDvB,OACE5I,EAAAC,EAAAC,cAAA,MAAAiB,OAAA2F,OAAA,GACMD,EADN,CAEElD,UAAWoD,YAAKtE,EAAQmB,KAAMD,KAE9B3D,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CACErC,MAAM,gBACN0F,cAAY,EACZpD,QAAQ,SAEP+D,EAAUjE,OAAO,wBAAsBhD,EAAO,EAAE,MAAI,IACpDc,KAAKC,KAAKkG,EAAUjE,OAAS/C,IAEhCjB,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,KACE9I,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CACEC,OAAQhJ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,MACRC,MAAM,kBAERlJ,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,MACAnJ,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CAAazF,UAAWlB,EAAQ+E,SAC9BxH,EAAAC,EAAAC,cAACmJ,EAAApJ,EAAD,KACED,EAAAC,EAAAC,cAAA,OAAKyD,UAAWlB,EAAQgF,OACtBzH,EAAAC,EAAAC,cAACoJ,EAAA,EAAD,KACEtJ,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,KACEvJ,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,KACExJ,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAW+C,QAAQ,YACjB7F,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CACEC,QAASpB,EAAkBtE,SAAWiE,EAAUjE,OAChDpC,MAAM,UACN+H,cACErB,EAAkBtE,OAAS,GAC3BsE,EAAkBtE,OAASiE,EAAUjE,OAEvCa,SAzEE,SAAAnD,GACtB,IAAM4G,EAAoB5G,EAAMkI,OAAOF,QACnCzB,EAAUnD,IAAI,SAAA+E,GAAQ,OAAIA,EAASC,KACnC,GAEJvB,EAAqBD,OAuELtI,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KAAW,QACX9C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KAAW,YACX9C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KAAW,eACX9C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KAAW,QACX9C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KAAW,iBACX9C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KAAW,WACX9C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAWiH,MAAM,SAAQ,aAG7B/J,EAAAC,EAAAC,cAAC8J,EAAA,EAAD,KACG/B,EAAUgC,MAAM,EAAGhJ,GAAa6D,IAAI,SAAA+E,GAAQ,OAC3C7J,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CACEU,OAAK,EACLjF,IAAK4E,EAASC,GACdK,UAAsD,IAA5C7B,EAAkB8B,QAAQP,EAASC,KAE7C9J,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAW+C,QAAQ,YACjB7F,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CACEC,SAC8C,IAA5CpB,EAAkB8B,QAAQP,EAASC,IAErClI,MAAM,UACNiD,SAAU,SAAAnD,GAAK,OA1Ff,SAACA,EAAOoI,GAC9B,IAAMO,EAAgB/B,EAAkB8B,QAAQN,GAC5CQ,EAAuB,IAEJ,IAAnBD,EACFC,EAAuBA,EAAqBnI,OAAOmG,EAAmBwB,GAC3C,IAAlBO,EACTC,EAAuBA,EAAqBnI,OAC1CmG,EAAkB2B,MAAM,IAEjBI,IAAkB/B,EAAkBtE,OAAS,EACtDsG,EAAuBA,EAAqBnI,OAC1CmG,EAAkB2B,MAAM,GAAI,IAErBI,EAAgB,IACzBC,EAAuBA,EAAqBnI,OAC1CmG,EAAkB2B,MAAM,EAAGI,GAC3B/B,EAAkB2B,MAAMI,EAAgB,KAI5C9B,EAAqB+B,GAsEGC,CAAgB7I,EAAOmI,EAASC,KAElClF,OAAmD,IAA5C0D,EAAkB8B,QAAQP,EAASC,OAG9C9J,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KACE9C,EAAAC,EAAAC,cAAA,OAAKyD,UAAWlB,EAAQkF,UACtB3H,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CACE7G,UAAWlB,EAAQoF,OACnB4C,IAAKZ,EAAShC,QAEb6C,YAAYb,EAASpD,OAExBzG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CACE/I,MAAM,UACNgB,UAAWgI,IACX1I,GAAG,0BACHgC,QAAQ,MAEP2F,EAASpD,MAEZzG,EAAAC,EAAAC,cAAA,WAAM2J,EAASgB,UAIrB7K,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KAAY+G,EAASiB,UACrB9K,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KACG+G,EAASkB,SACTlB,EAASmB,OAEZhL,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KAAY+G,EAASoB,MACrBjL,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KAAY+G,EAASqB,UACrBlL,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KACE9C,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAarE,MAAOiF,EAASsB,UAE/BnL,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAWiH,MAAM,SACf/J,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CACE3F,MAAM,UACNgB,UAAWgI,IACXQ,KAAK,QACLlJ,GAAG,0BACHgC,QAAQ,YACT,iBAWjBlE,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAa1H,UAAWlB,EAAQ0C,SAC9BnF,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CACE1I,UAAU,MACV/B,MAAOoH,EAAUjE,OACjBjD,aA7He,SAACW,EAAOV,GAC/B0H,EAAQ1H,IA6HAmC,oBA1HsB,SAAAzB,GAC9BmH,EAAenH,EAAMkI,OAAOhF,QA0HpB5D,KAAMA,EACNC,YAAaA,EACboC,mBAAoB,CAAC,EAAG,GAAI,QAIlCrD,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAckB,SAAU7B,MAU9BN,EAAQuD,aAAe,CACrBtD,UAAW,IAGED,QCxOTtB,EAAYC,YAAW,SAAAtF,GAAK,MAAK,CACrCuC,KAAM,CACJiC,QAASxE,EAAM+F,QAAQ,IAEzBoE,QAAS,CACPC,UAAWpK,EAAM+F,QAAQ,OAkDdsE,EA9CgB,WAC7B,IAAMjJ,EAAUiE,IADmBwB,EAGDC,mBAAS,IAHRC,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GAG5BD,EAH4BG,EAAA,GAGjBuD,EAHiBvD,EAAA,GAKnCwD,oBAAU,WACR,IAAIC,GAAU,EAYd,OATEC,IAAMC,IAAI,6BAA6BC,KAAK,SAAAC,GACtCJ,GACFF,EAAaM,EAASC,KAAKjE,aAO1B,WACL4D,GAAU,IAEX,IAKH,OACE7L,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CACEtF,UAAWlB,EAAQmB,KACnBsF,MAAM,4BAENlJ,EAAAC,EAAAC,cAACiM,EAAD,MACAnM,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CACEmD,SAVe,aAWfC,SAVe,eAYhBpE,GACCjI,EAAAC,EAAAC,cAACoM,EAAD,CACE3I,UAAWlB,EAAQ+I,QACnBvD,UAAWA,MCvDrBsE,EAAAC,EAAApH,EAAA,4BAAAqH,gGCMeC,EAAAvL,OAAAwL,EAAA,GAAc3M,EAAAC,EAAKC,cAAA,QAClCsM,EAAA,+FACC,wBCFcI,EAAAzL,OAAAwL,EAAA,GAAc3M,EAAAC,EAAKC,cAAA,QAClCsM,EAAA,wIACC,oBCFcK,EAAA1L,OAAAwL,EAAA,GAAc3M,EAAAC,EAAKC,cAAA,QAClCsM,EAAA,kGACC,wCCuDDM,EAAyB9M,EAAAC,EAAKC,cAAe0M,EAAY,MACzDG,EAAkB/M,EAAAC,EAAKC,cAAewM,EAAwB,MAC9DM,EAA+BhN,EAAAC,EAAKC,cAAe2M,EAAyB,MACxEI,EAAWjN,EAAAC,EAAKQ,WAAA,SAAAC,EAAAC,GACpB,IAAAuM,EAAAxM,EAAAyM,YACAA,OAAA,IAAAD,EAAAJ,EAAAI,EACAzK,EAAA/B,EAAA+B,QACA2K,EAAA1M,EAAAkB,MACAA,OAAA,IAAAwL,EAAA,YAAAA,EACAC,EAAA3M,EAAA4D,KACAA,OAAA,IAAA+I,EAAAN,EAAAM,EACAC,EAAA5M,EAAAiJ,cACAA,OAAA,IAAA2D,KACAC,EAAA7M,EAAA8M,kBACAA,OAAA,IAAAD,EAAAP,EAAAO,EACAE,EAAA/M,EAAA+M,WACAvM,EAAcC,OAAAC,EAAA,EAAAD,CAAwBT,EAAA,2FAEtC,OAASV,EAAAC,EAAKC,cAAewN,EAAA,EAAYvM,OAAAI,EAAA,EAAAJ,CAAQ,CACjD8J,KAAA,WACAkC,YAAAxD,EAAA6D,EAAAL,EACA1K,QAAA,CACAmB,KAAYzC,OAAAuD,EAAA,EAAAvD,CAAIsB,EAAAmB,KAAAnB,EAAA,QAAAN,OAAsChB,OAAAwM,EAAA,EAAAxM,CAAUS,KAAA+H,GAAAlH,EAAAkH,eAChED,QAAAjH,EAAAiH,QACA/H,SAAAc,EAAAd,UAEAC,QACA6L,WAAgBtM,OAAAI,EAAA,EAAAJ,CAAQ,CACxByM,qBAAAjE,GACK8D,GACLnJ,KAAAqF,EAAA6D,EAAAlJ,EACA3D,OACGO,MAsFYkE,EAAA,EAAAjE,OAAAkE,EAAA,EAAAlE,CAzKE,SAAAE,GACjB,OAEAuC,KAAA,CACAhC,MAAAP,EAAAiE,QAAAC,KAAAC,WAIAkE,QAAA,GAGA/H,SAAA,GAGAgI,cAAA,GAGAkE,aAAA,CACAC,YAAA,CACAlM,MAAAP,EAAAiE,QAAAyI,QAAAC,KACAC,UAAA,CACAC,gBAA2B/M,OAAAgN,EAAA,EAAAhN,CAAIE,EAAAiE,QAAAyI,QAAAC,KAAA3M,EAAAiE,QAAA0D,OAAAoF,cAE/BC,uBAAA,CACAH,gBAAA,iBAIAI,aAAA,CACA1M,MAAAP,EAAAiE,QAAA0D,OAAArH,WAKA4M,eAAA,CACAT,YAAA,CACAlM,MAAAP,EAAAiE,QAAAE,UAAAwI,KACAC,UAAA,CACAC,gBAA2B/M,OAAAgN,EAAA,EAAAhN,CAAIE,EAAAiE,QAAAE,UAAAwI,KAAA3M,EAAAiE,QAAA0D,OAAAoF,cAE/BC,uBAAA,CACAH,gBAAA,iBAIAI,aAAA,CACA1M,MAAAP,EAAAiE,QAAA0D,OAAArH,aA2HgC,CAChC8E,KAAA,eADe,CAEZwG","file":"static/js/30.91ee66ef.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} page The page selected\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(12),\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      height: 56,\n      minHeight: 56,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      // `.selectRoot` should be merged with `.input` in v5.\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {\n      top: 1\n    },\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count);\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      classes = props.classes,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"classes\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return React.createElement(Component, _extends({\n    className: classes.root,\n    colSpan: colSpan,\n    ref: ref\n  }, other), React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption,\n      value: rowsPerPageOption\n    }, rowsPerPageOption);\n  })), React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: Math.min(count, (page + 1) * rowsPerPage),\n    count: count,\n    page: page\n  })), React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: backIconButtonProps,\n    count: count,\n    nextIconButtonProps: nextIconButtonProps,\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a DOM element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label.\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label. Invoked with a `{ from, to, count, page }`\n   * object.\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} page The page selected\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: the page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Customers\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n          Add Flighing\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  Button,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\n\nimport getInitials from 'utils/getInitials';\nimport { ReviewStars, GenericMoreButton, TableEditBar } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  },\n  nameCell: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, customers, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = event => {\n    const selectedCustomers = event.target.checked\n      ? customers.map(customer => customer.id)\n      : [];\n\n    setSelectedCustomers(selectedCustomers);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomers.indexOf(id);\n    let newSelectedCustomers = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomers = newSelectedCustomers.concat(selectedCustomers, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(1)\n      );\n    } else if (selectedIndex === selectedCustomers.length - 1) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(0, -1)\n      );\n    } else if (selectedIndex > 0) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(0, selectedIndex),\n        selectedCustomers.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedCustomers(newSelectedCustomers);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {customers.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(customers.length / rowsPerPage)}\n      </Typography>\n      <Card>\n        <CardHeader\n          action={<GenericMoreButton />}\n          title=\"All customers\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={selectedCustomers.length === customers.length}\n                        color=\"primary\"\n                        indeterminate={\n                          selectedCustomers.length > 0 &&\n                          selectedCustomers.length < customers.length\n                        }\n                        onChange={handleSelectAll}\n                      />\n                    </TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Location</TableCell>\n                    <TableCell>Money spent</TableCell>\n                    <TableCell>Type</TableCell>\n                    <TableCell>Projects held</TableCell>\n                    <TableCell>Reviews</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {customers.slice(0, rowsPerPage).map(customer => (\n                    <TableRow\n                      hover\n                      key={customer.id}\n                      selected={selectedCustomers.indexOf(customer.id) !== -1}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={\n                            selectedCustomers.indexOf(customer.id) !== -1\n                          }\n                          color=\"primary\"\n                          onChange={event =>\n                            handleSelectOne(event, customer.id)\n                          }\n                          value={selectedCustomers.indexOf(customer.id) !== -1}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <div className={classes.nameCell}>\n                          <Avatar\n                            className={classes.avatar}\n                            src={customer.avatar}\n                          >\n                            {getInitials(customer.name)}\n                          </Avatar>\n                          <div>\n                            <Link\n                              color=\"inherit\"\n                              component={RouterLink}\n                              to=\"/management/customers/1\"\n                              variant=\"h6\"\n                            >\n                              {customer.name}\n                            </Link>\n                            <div>{customer.email}</div>\n                          </div>\n                        </div>\n                      </TableCell>\n                      <TableCell>{customer.location}</TableCell>\n                      <TableCell>\n                        {customer.currency}\n                        {customer.spent}\n                      </TableCell>\n                      <TableCell>{customer.type}</TableCell>\n                      <TableCell>{customer.projects}</TableCell>\n                      <TableCell>\n                        <ReviewStars value={customer.rating} />\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to=\"/management/customers/1\"\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={customers.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      <TableEditBar selected={selectedCustomers} />\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  customers: []\n};\n\nexport default Results;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport axios from 'utils/axios';\nimport { Page, SearchBar } from 'components';\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst CustomerManagementList = () => {\n  const classes = useStyles();\n\n  const [customers, setCustomers] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchCustomers = () => {\n      axios.get('/api/management/customers').then(response => {\n        if (mounted) {\n          setCustomers(response.data.customers);\n        }\n      });\n    };\n\n    fetchCustomers();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const handleFilter = () => {};\n  const handleSearch = () => {};\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Customer Management List\"\n    >\n      <Header />\n      <SearchBar\n        onFilter={handleFilter}\n        onSearch={handleSearch}\n      />\n      {customers && (\n        <Results\n          className={classes.results}\n          customers={customers}\n        />\n      )}\n    </Page>\n  );\n};\n\nexport default CustomerManagementList;\n","export { default } from './CustomerManagementList';\n","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport { capitalize } from '../utils/helpers';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This prop can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);"],"sourceRoot":""}